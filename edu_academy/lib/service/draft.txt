  fiCreate(String rref, userData) async {
    // the rref is student or techer or parent or admin
    try {
      final allStudents = await real.ref("Users").child(rref).once();
      int num_s = allStudents.snapshot.children.length;
      log(num_s.toString());
      real
          .ref("Users")
          .child(rref)
          .child("${rref[0]}${(num_s + 1).toString()}")
          .set(userData);
    } catch (e) {
      log(e.toString());
    }
  }


//////////////////////////////////////////////////////////////////////////////////////////

    fiRead_ForLogin(String input, String password) async {
    try {
      // Trim the input and password
      input = input.replaceAll(' ', ''); //.replaceAll(' ', '')
      password = password.replaceAll(' ', '');
      log("input $input / $password");

      // Fetch data from Firebase Realtime Database
      final allData = await real.ref("Users").once();

      // Check if the data is not null
      if (allData.snapshot.value != null) {
        Map<dynamic, dynamic> data =
            allData.snapshot.value as Map<dynamic, dynamic>;

        // Function to check credentials within a specific category
        List<Object>? checkCredentials(
            Map<dynamic, dynamic> categoryData, String userType) {
          // log(categoryData.toString());
          for (var key in categoryData.keys) {
            String email = (categoryData[key]['email'] ?? '')
                .toString()
                .replaceAll(' ', '');
            String phone = (categoryData[key]['phone'] ?? '')
                .toString()
                .replaceAll(' ', '');
            String storedPassword = (categoryData[key]['password'] ?? '')
                .toString()
                .replaceAll(' ', '');
            log("data $email / $phone / $storedPassword");

            if ((email == input || phone == input) &&
                storedPassword == password) {
              log('Login successful as $userType: $key');
              return [
                true,
                '$userType-$key',
                '${categoryData[key]['state']}',
                '${categoryData[key]['name']}-${categoryData[key]['grade']}'
              ];
            }
          }
          return null;
        }

        // Check Students data
        if (data['Students'] != null) {
          var result = checkCredentials(data['Students'], 'Student');
          if (result != null) return result;
        }

        // Check Parents data
        if (data['Parent'] != null) {
          var result = checkCredentials(data['Parent'], 'Parent');
          if (result != null) return result;
        }

        // Check Teachers data
        if (data['Teacher'] != null) {
          var result = checkCredentials(data['Teacher'], 'Teacher');
          if (result != null) return result;
        }
        if (data['Admin'] != null) {
          var result = checkCredentials(data['Admin'], 'Admin');
          if (result != null) return result;
        }

        // If no user was found
        log('Login failed: Invalid email/phone or password');
        return [false, 'Login failed: Invalid email/phone or password'];
      } else {
        log('Error: Data is null');
        return [false, 'Error: Data is null'];
      }
    } catch (e) {
      log(e.toString());
      return [false, e.toString()];
    }
  }


class MyWidgetState extends State<MyWidget> {
  List<List<dynamic>> all_rec = [];

  @override
  void initState() {
    super.initState();
    fetchRecords();
  }

  Future<void> fetchRecords() async {
    // Perform async work outside setState
    List<List<dynamic>> records = await dbService.fiRead_Records(
        grade, "${Subjects[GradesSubjects[grade][index]][1]}");

    // Update state synchronously inside setState
    setState(() {
      all_rec = records;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: all_rec.isEmpty
          ? CircularProgressIndicator()
          : ListView.builder(
              itemCount: all_rec.length,
              itemBuilder: (context, index) {
                return ListTile(
                  title: Text(all_rec[index][0]),
                  subtitle: Text(all_rec[index][1]),
                );
              },
            ),
    );
  }
}
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();

  // Example data
  final homeworkData = [
    {
      'grade': 'grade1',
      'subject': 'math',
      'homeworkId': 'homeworkId1',
      'title': 'Solve for X',
      'score': 85,
      'feedback': 'Great work! Keep practicing.',
      'studentAnswers': [
        {
          'studentId': 'studentId1',
          'answer': 'x = 5',
          'imageUrl': 'https://example.com/student1_answer.jpg',
        },
        {
          'studentId': 'studentId2',
          'answer': 'x = 7',
          'imageUrl': 'https://example.com/student2_answer.jpg',
        },
      ],
    },
    // Add more homework data here...
  ];

  // Store homework data in Firestore
  final firestore = FirebaseFirestore.instance;
  for (final homework in homeworkData) {
    final grade = homework['grade'];
    final subject = homework['subject'];
    final homeworkId = homework['homeworkId'];
    final title = homework['title'];
    final score = homework['score'];
    final feedback = homework['feedback'];
    final studentAnswers = homework['studentAnswers'];

    await firestore
        .collection('homework')
        .doc(grade)
        .collection(subject)
        .doc(homeworkId)
        .set({
      'title': title,
      'score': score,
      'feedback': feedback,
      'studentAnswers': studentAnswers,
    });
  }

  print('Homework data stored successfully!');
}

// Example class to represent a student answer
class StudentAnswer {
  final String studentId;
  final String answer;
  final String imageUrl;

  StudentAnswer({
    required this.studentId,
    required this.answer,
    required this.imageUrl,
  });

  Map<String, dynamic> toMap() {
    return {
      'studentId': studentId,
      'answer': answer,
      'imageUrl': imageUrl,
    };
  }
}
// homework
//   |
//   --- grade1
//       |
//       --- math
//           |
//           --- homeworkId1
//               |
//               --- title: "Solve for X"
//               --- feedback: "Great work! Keep practicing."
//               --- studentAnswers: 
//                   |
//                   --- studentId1: 
//                       |
//                       --- answer: "x = 5"
//                       --- imageUrl: "https://example.com/student1_answer.jpg"
//                       --- score: null  // Score is initially null
//                   |
//                   --- studentId2: 
//                       |
//                       --- answer: "x = 7"
//                       --- imageUrl: "https://example.com/student2_answer.jpg"
//                       --- score: null  // Score is initially null
//           |
//           --- homeworkId2: ...
//       |
//       --- science
//           |
//           --- homeworkId1: ...
//       |
//       --- ...
//   |
//   --- grade2
//       |
//       --- ...
//   |
//   --- grade3
//       |
//       --- ...
import '/flutter_flow/flutter_flow_animations.dart';
import '/flutter_flow/flutter_flow_pdf_viewer.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import '/flutter_flow/upload_data.dart';
import 'dart:math';
import 'package:flutter/material.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';

import 'home_page_model.dart';
export 'home_page_model.dart';

class HomePageWidget extends StatefulWidget {
  const HomePageWidget({super.key});

  @override
  State<HomePageWidget> createState() => _HomePageWidgetState();
}

class _HomePageWidgetState extends State<HomePageWidget>
    with TickerProviderStateMixin {
  late HomePageModel _model;

  final scaffoldKey = GlobalKey<ScaffoldState>();

  final animationsMap = <String, AnimationInfo>{};

  @override
  void initState() {
    super.initState();
    _model = createModel(context, () => HomePageModel());

    animationsMap.addAll({
      'circleImageOnPageLoadAnimation': AnimationInfo(
        trigger: AnimationTrigger.onPageLoad,
        effectsBuilder: () => [
          ScaleEffect(
            curve: Curves.easeIn,
            delay: 0.0.ms,
            duration: 600.0.ms,
            begin: Offset(1.0, 1.0),
            end: Offset(1.0, 1.0),
          ),
        ],
      ),
    });
  }

  @override
  void dispose() {
    _model.dispose();

    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () => _model.unfocusNode.canRequestFocus
          ? FocusScope.of(context).requestFocus(_model.unfocusNode)
          : FocusScope.of(context).unfocus(),
      child: Scaffold(
        key: scaffoldKey,
        backgroundColor: FlutterFlowTheme.of(context).primaryBackground,
        body: SafeArea(
          top: true,
          child: Container(
            width: double.infinity,
            height: double.infinity,
            decoration: BoxDecoration(
              color: FlutterFlowTheme.of(context).secondaryBackground,
              borderRadius: BorderRadius.only(
                bottomLeft: Radius.circular(0),
                bottomRight: Radius.circular(0),
                topLeft: Radius.circular(0),
                topRight: Radius.circular(0),
              ),
            ),
            alignment: AlignmentDirectional(0, 0),
            child: Column(
              mainAxisSize: MainAxisSize.max,
              children: [
                Align(
                  alignment: AlignmentDirectional(0, -1),
                  child: Padding(
                    padding: EdgeInsets.all(22),
                    child: InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        final selectedMedia =
                            await selectMediaWithSourceBottomSheet(
                          context: context,
                          allowPhoto: true,
                        );
                        if (selectedMedia != null &&
                            selectedMedia.every((m) =>
                                validateFileFormat(m.storagePath, context))) {
                          setState(() => _model.isDataUploading1 = true);
                          var selectedUploadedFiles = <FFUploadedFile>[];

                          try {
                            selectedUploadedFiles = selectedMedia
                                .map((m) => FFUploadedFile(
                                      name: m.storagePath.split('/').last,
                                      bytes: m.bytes,
                                      height: m.dimensions?.height,
                                      width: m.dimensions?.width,
                                      blurHash: m.blurHash,
                                    ))
                                .toList();
                          } finally {
                            _model.isDataUploading1 = false;
                          }
                          if (selectedUploadedFiles.length ==
                              selectedMedia.length) {
                            setState(() {
                              _model.uploadedLocalFile1 =
                                  selectedUploadedFiles.first;
                            });
                          } else {
                            setState(() {});
                            return;
                          }
                        }
                      },
                      child: Container(
                        width: 120,
                        height: 120,
                        clipBehavior: Clip.antiAlias,
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                        ),
                        child: Image.memory(
                          _model.uploadedLocalFile1.bytes ??
                              Uint8List.fromList([]),
                          fit: BoxFit.cover,
                        ),
                      ),
                    ).animateOnPageLoad(
                        animationsMap['circleImageOnPageLoadAnimation']!),
                  ),
                ),
                FFButtonWidget(
                  onPressed: () async {
                    final selectedFiles = await selectFiles(
                      allowedExtensions: ['pdf'],
                      multiFile: false,
                    );
                    if (selectedFiles != null) {
                      setState(() => _model.isDataUploading2 = true);
                      var selectedUploadedFiles = <FFUploadedFile>[];

                      try {
                        selectedUploadedFiles = selectedFiles
                            .map((m) => FFUploadedFile(
                                  name: m.storagePath.split('/').last,
                                  bytes: m.bytes,
                                ))
                            .toList();
                      } finally {
                        _model.isDataUploading2 = false;
                      }
                      if (selectedUploadedFiles.length ==
                          selectedFiles.length) {
                        setState(() {
                          _model.uploadedLocalFile2 =
                              selectedUploadedFiles.first;
                        });
                      } else {
                        setState(() {});
                        return;
                      }
                    }
                  },
                  text: 'Button',
                  options: FFButtonOptions(
                    height: 40,
                    padding: EdgeInsetsDirectional.fromSTEB(24, 0, 24, 0),
                    iconPadding: EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                    color: FlutterFlowTheme.of(context).primary,
                    textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                          fontFamily: 'Readex Pro',
                          color: Colors.white,
                          letterSpacing: 0,
                        ),
                    elevation: 3,
                    borderSide: BorderSide(
                      color: Colors.transparent,
                      width: 1,
                    ),
                    borderRadius: BorderRadius.circular(8),
                  ),
                ),
                FlutterFlowPdfViewer(
                  networkPath: 'http://www.pdf995.com/samples/pdf.pdf',
                  height: 508,
                  horizontalScroll: false,
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}






name

Teacher_Id
SubjectThatIsSelected
ListOfGrades[GradeHomeWorkOppenedIndex][0]

Files_List
HomeworkTitle
HomeworkBody







اهلا بكم في الكاديمية رياض الصالحين
منصة تعليمية متكالمه لجميل الصفوف الدراسيه
تشمله نخبة من اكفاء المعلمين و المعلمات في جميع المراحل الدراسيه
في بيئة متميز تلبي احتياجات الطلاب من متابعه كامله مع المعلين من الشرح و تطبيق 
و ايضا جدول  دراسي بمواعيد ثابة 
و لا ننسا المتابعه المستمره مع المعلين و اولياء الأمور من تقييم مستمر للطلبة على مدار الاسبوع ل تحقيق اكبر قدر ممكن من الاستفادة و الفهم للطالب
من kg الى الثانوي
رابط زوم يحاكي الفصور الدراسيه يعمل على مدار اليوم
دورات للتقوه في جميع المواد المواد الدراسيه و ايضا تحفيظ القرأن الكريم
و نهتم ايضا بالمجالات التكنلوجلة مثل كورسات في لغات البرمجه


[4:06 pm, 26/08/2024] Mohamed Hosni: all_Homeworks[IsOpendIndex][0]
[4:07 pm, 26/08/2024] Mohamed Hosni: "Created date: ${all_Homeworks[IsOpendIndex][2]}\nscore:${all_Homeworks[IsOpendIndex][3]}",
[4:08 pm, 26/08/2024] Mohamed Hosni: (all_Homeworks[IsOpendIndex][4] as List).length
[4:08 pm, 26/08/2024] Mohamed Hosni: all_Homeworks[IsOpendIndex][4][index]
[4:10 pm, 26/08/2024] Mohamed Hosni: "${Grade_selected} Homework",
[4:10 pm, 26/08/2024] Mohamed Hosni: all_Homeworks.length
[4:10 pm, 26/08/2024] Mohamed Hosni: all_Homeworks[index][0]
[4:10 pm, 26/08/2024] Mohamed Hosni: (all_Homeworks[index][4] as List).length
[4:11 pm, 26/08/2024] Mohamed Hosni: Image.network(all_Homeworks[index][4][index],




 (HomeWorks[HomeWorkIndex][HomeworkSelected + 1][3].length == 0)
            ? Center(
                child: TMaker(
                    text: "No Files",
                    fontSize: 20,
                    fontWeight: FontWeight.w700,
                    color: Colors.black))
            : GridView.builder(
                itemCount:
                    HomeWorks[HomeWorkIndex][HomeworkSelected + 1][3].length,
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                    crossAxisCount: 2),
                itemBuilder: (context, index) {
                  return InstaImageViewer(
                    backgroundColor: const Color.fromARGB(255, 233, 255, 247),
                    child: Image.network(HomeWorks[HomeWorkIndex]
                        [HomeworkSelected + 1][3][index]),
                  );
                }),






ubjects
(array)


0
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A3%D9%84%D9%85%D8%A7%D9%86%D9%8A.png?alt=media&token=1da5a0a1-b473-46e5-971a-565ebd168da6"
(string)

subject
"ألماني"
(string)


1
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A5%D9%8A%D8%B7%D8%A7%D9%84%D9%8A.png?alt=media&token=caadd251-90d8-450d-96c4-f8c74e8f9b96"
(string)

subject
"إيطالي"
(string)


2
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D8%B3%D8%AA%D8%A7%D8%AA%D9%8A%D9%83%D8%A7.png?alt=media&token=68d722b3-24f0-4bc3-bdd4-093be4b1df57"
(string)

subject
"استاتيكا"
(string)


3
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D8%A3%D8%AD%D9%8A%D8%A7%D8%A1.png?alt=media&token=f337a677-4a47-43f8-87be-82ac9c220258"
(string)

subject
"الأحياء"
(string)


4
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D8%AA%D9%88%D9%83%D8%A7%D8%AA%D8%B3%D9%88.png?alt=media&token=8517cbe5-8c0c-4b2d-bd21-0a8b0a822a69"
(string)

subject
"التوكاتسو"
(string)


5
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D8%AC%D8%BA%D8%B1%D8%A7%D9%81%D9%8A%D8%A7.png?alt=media&token=33488cbf-fd46-4c3e-ad2e-dc737e4d8bb2"
(string)

subject
"الجغرافيا"
(string)


6
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D8%AC%D9%8A%D9%88%D9%84%D9%88%D8%AC%D9%8A%D8%A7.png?alt=media&token=da03d083-9a40-4c86-8acb-525355ffc783"
(string)

subject
"الجيولوجيا"
(string)


7
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D8%B1%D9%8A%D8%A7%D8%B6%D9%8A%D8%A7%D8%AA.png?alt=media&token=c601d75c-2571-4b11-ba41-42a50e096be1"
(string)

subject
"الرياضيات"
(string)


8
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D8%B9%D9%84%D9%88%D9%85.png?alt=media&token=89301426-cb1a-4f9c-b607-0975121c993e"
(string)

subject
"العلوم"
(string)


9
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D9%81%D9%8A%D8%B2%D9%8A%D8%A7%D8%A1.png?alt=media&token=952f96e0-1b56-4d88-a433-240cbdbf447e"
(string)

subject
"الفيزياء"
(string)


10
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D9%83%D9%8A%D9%85%D9%8A%D8%A7%D8%A1.png?alt=media&token=183123c0-0715-4bf2-a42d-838f9cfc6b05"
(string)

subject
"الكيمياء"
(string)


11
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D9%84%D8%BA%D8%A9%20%D8%A7%D9%84%D8%A3%D8%B3%D8%A8%D8%A7%D9%86%D9%8A%D8%A9.png?alt=media&token=f0982087-f644-48bc-862f-b996573c70eb"
(string)

subject
"اللغة الأسبانية"
(string)


12
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%84%D9%84%D8%BA%D9%87%20%D8%A7%D9%84%D8%A7%D9%86%D8%AC%D9%84%D9%8A%D8%B2%D9%8A%D8%A9.png?alt=media&token=63d4b0ed-9207-450a-a059-b64e1ace5e52"
(string)

subject
"اللغه الانجليزية"
(string)


13
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AA%D8%A7%D8%B1%D9%8A%D8%AE.png?alt=media&token=20ab72d5-9ca5-4a07-b8bc-7af5ae0a8735"
(string)

subject
"تاريخ"
(string)


14
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AA%D8%B1%D8%A8%D9%8A%D8%A9%20%D8%AF%D9%8A%D9%86%D9%8A%D8%A9.png?alt=media&token=7dc539df-44fe-4e6c-9e7d-caa696831144"
(string)

subject
"تربية دينية"
(string)


15
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AA%D8%B1%D8%A8%D9%8A%D8%A9%20%D9%81%D9%86%D9%8A%D8%A9.png?alt=media&token=6c146745-90ba-4e53-871b-b8b3b91a803b"
(string)

subject
"تربية فنية"
(string)


16
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AA%D9%81%D8%A7%D8%B6%D9%84%20%D9%88%D8%AA%D9%83%D8%A7%D9%85%D9%84.png?alt=media&token=5b568877-fec3-4c08-8ed0-64b241aeac29"
(string)

subject
"تفاضل وتكامل"
(string)


17
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AA%D9%83%D9%86%D9%88%D9%84%D9%88%D8%AC%D9%8A%D8%A7%20%D8%A7%D9%84%D9%85%D8%B9%D9%84%D9%88%D9%85%D8%A7%D8%AA.png?alt=media&token=8e76bfbd-7199-4215-b431-f5eef103fa58"
(string)

subject
"تكنولوجيا المعلومات"
(string)


18
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AC%D8%A8%D8%B1.png?alt=media&token=f4d41599-725b-495a-a0bc-6809a2f82c12"
(string)

subject
"جبر"
(string)


19
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AD%D8%A7%D8%B3%D8%A8%20%D8%A2%D9%84%D9%8A.png?alt=media&token=b6e86511-b20a-4536-8813-03449a1190da"
(string)

subject
"حاسب آلي"
(string)


20
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AF%D8%B1%D8%A7%D8%B3%D8%A7%D8%AA%20.png?alt=media&token=fb3d2293-0d70-4503-8431-9fcdb50b9393"
(string)

subject
"دراسات"
(string)


21
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%AF%D9%8A%D9%86%D8%A7%D9%85%D9%8A%D9%83%D8%A7.png?alt=media&token=ce28e6f2-439c-4cea-9fd2-79674c7a9183"
(string)

subject
"ديناميكا"
(string)


22
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%B9%D9%84%D9%85%20%D8%A7%D9%84%D9%86%D9%81%D8%B3.png?alt=media&token=dd5ed0a6-61ed-43c3-870f-376ff8ca55df"
(string)

subject
"علم النفس"
(string)


23
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D9%81%D8%B1%D9%86%D8%B3%D8%A7%D9%88%D9%8A.png?alt=media&token=8ce512f3-d741-43f7-af38-e7322f11011a"
(string)

subject
"فرنساوي"
(string)


24
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D9%81%D9%84%D8%B3%D9%81%D9%87.png?alt=media&token=acb173c8-4231-408c-a86c-4cbe9c0ccc82"
(string)

subject
"فلسفه"
(string)


25
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D9%82%D9%8A%D9%85%20%D9%88%D8%A7%D8%AD%D8%AA%D8%B1%D8%A7%D9%85%20%D8%A7%D9%84%D8%A2%D8%AE%D8%B1.png?alt=media&token=18d3668b-694a-4b4a-a051-4d47302fc227"
(string)

subject
"قيم واحترام الآخر"
(string)


26
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D9%85%D9%87%D8%A7%D8%B1%D8%A7%D8%AA%20%D8%A7%D9%84%D9%85%D9%87%D9%86%D9%8A%D8%A9.png?alt=media&token=47d148dd-5db7-44b1-bc19-e744d5780565"
(string)

subject
"مهارات المهنية"
(string)


27
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D9%87%D9%86%D8%AF%D8%B3%D8%A9%20%D9%81%D8%B1%D8%A7%D8%BA%D9%8A%D9%87.png?alt=media&token=410ef17e-78e1-4919-836b-bc900ef8f361"
(string)

subject
"هندسة فراغيه"
(string)


28
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D9%87%D9%86%D8%AF%D8%B3%D8%A9.png?alt=media&token=5acfcf39-f26a-4998-a4e9-607652a99bb0"
(string)

subject
"هندسة"
(string)


29
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%A7%D9%83%D8%AA%D8%B4%D9%81.png?alt=media&token=6b38de8c-2247-4053-80f2-5e898402d3dd"
(string)

subject
"اكتشف"
(string)


30
(map)

image
"https://firebasestorage.googleapis.com/v0/b/rsa-app-3ec3f.appspot.com/o/SubjectsIcons%2F%D8%B9%D8%B1%D8%A8%D9%8A.png?alt=media&token=25f3fbb2-434b-4461-a768-f48ea7be31b6"
(string)

subject
"عربي"

all_Homeworks.length
index1
text: all_Homeworks[index1][0]
text: all_Homeworks[index1][1],
itemCount: (all_Homeworks[index1][4] as List).length,
Image.network(
() {
print("=================================\n$all_Homeworks");
print(index);
return all_Homeworks[index1][4][index];
}(),










